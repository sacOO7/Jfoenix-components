buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
        classpath 'me.tatarka:gradle-retrolambda:3.2.4'
        classpath 'net.nemerosa:versioning:1.6.2'
        //compile fileTree(dir: 'libs', include: ['*.jar'])
    }
}


allprojects {
    apply plugin: 'base'
    apply plugin: 'idea'
    apply plugin: 'com.github.ben-manes.versions'
	
    repositories {
    	jcenter()
        mavenCentral()
        flatDir { dir rootProject.file('libs') }
    }

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

subprojects { subproj ->
    apply plugin: 'java'
    apply from: rootProject.file('gradle/code-coverage.gradle')    
    apply from: rootProject.file('gradle/javafx.gradle')

    configurations {
        compileOnly
        testCompileOnly
    }

    subproj.tasks.withType(JavaCompile) {
        sourceCompatibility = subproj.sourceCompatibility
        targetCompatibility = subproj.targetCompatibility
    }

    subproj.tasks.withType(GroovyCompile) {
        sourceCompatibility = subproj.sourceCompatibility
        targetCompatibility = subproj.targetCompatibility
    }

    dependencies {    
        compileOnly project.files(project.jfxrtLocation)
    }

    sourceSets {
        main {
            compileClasspath += [configurations.compileOnly]
        }
        test {
            compileClasspath += [configurations.testCompileOnly]
        }
    }

    javadoc {
        classpath += [configurations.compileOnly]
    }

    idea {
        module {
            scopes.PROVIDED.plus += [configurations.compileOnly]
            scopes.PROVIDED.plus += [configurations.testCompileOnly]
        }
    }
}